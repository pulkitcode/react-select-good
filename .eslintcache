[{"/home/parth/Desktop/Projects/Planet/src/index.js":"1","/home/parth/Desktop/Projects/Planet/src/components/Electives.js":"2","/home/parth/Desktop/Projects/Planet/src/components/Sidebar.js":"3","/home/parth/Desktop/Projects/Planet/src/components/Breadths.js":"4","/home/parth/Desktop/Projects/Planet/src/App.js":"5","/home/parth/Desktop/Projects/Planet/src/components/Header.js":"6","/home/parth/Desktop/Projects/Planet/src/components/MainGrid.js":"7","/home/parth/Desktop/Projects/Planet/src/components/Main.js":"8"},{"size":198,"mtime":1608624404656,"results":"9","hashOfConfig":"10"},{"size":2435,"mtime":1609172287036,"results":"11","hashOfConfig":"10"},{"size":2207,"mtime":1609172345857,"results":"12","hashOfConfig":"10"},{"size":1676,"mtime":1609172348093,"results":"13","hashOfConfig":"10"},{"size":231,"mtime":1609168979019,"results":"14","hashOfConfig":"10"},{"size":293,"mtime":1609090689168,"results":"15","hashOfConfig":"10"},{"size":158,"mtime":1608980608871,"results":"16","hashOfConfig":"10"},{"size":790,"mtime":1609225207114,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"63yf2r",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/parth/Desktop/Projects/Planet/src/index.js",[],["38","39"],"/home/parth/Desktop/Projects/Planet/src/components/Electives.js",["40"],"import { useEffect, useState } from 'react';\nimport Fuse from 'fuse.js';\n\n\nconst Electives = ( props) => {\n  const [electives, setElectives] = useState([])\n  const [selectedElective, setSelectedElective] = useState([])\n  const [searchResults, setSearchResults] = useState([])\n  const [searchTerm, setSearchTerm] = useState(null)\n\n  const fuse = new Fuse(selectedElective, {\n    shouldSort: true,\n    includeMatches: true,\n    minMatchCharLength:2,\n    includeScore: true,\n    // threshold: 0.5,\n    location: 50,\n    keys:[\n      'name'\n    ]\n  })\n\n  const renderElectiveDepartments = () => {\n    return(\n      electives.map(\n        (dept) =>{\n          return(\n            <option value={dept.department}  key={dept._id}>{dept.department}</option>\n          )\n        }\n      )\n    )\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault()\n    const results = fuse.search(searchTerm)\n    console.log(searchTerm)\n    setSearchResults(results)\n    console.log(searchResults)\n  }\n\n  const renderElectives = () => {\n    const list = searchResults.slice(0,5)\n    return(\n      list.map( (item) =>{\n        return(\n          <li className='elective-item' onClick={(e)=>props.addSubject(e.target.innerHTML)} value={item.item.name}>{item.item.name}</li>\n        )\n      })\n    )\n  }\n\n  const selectElectives = (deptName) =>{\n    electives.map( ( dept ) => {\n      if(deptName === dept.department){\n        setSelectedElective(dept.electives)\n      }\n    })\n  }\n\n  const handleDeptChange = (e) => {\n    selectElectives(e.target.value)\n    console.log(selectedElective)\n  }\n\n  useEffect(()=>{\n    fetch('http://localhost:5001/Electives/')\n    .then(res => res.json())\n    .then(res => setElectives(res))\n  }, [])\n\n\n  return(\n    <div className='elective-area'>\n      <div className='title'>\n        <h3>Select Your Electives:</h3>\n      </div>\n      <select className='form-control electivesDropdown'\n        id='electivesSelect'\n        onChange={(e)=>handleDeptChange(e)}\n      >\n        {renderElectiveDepartments()}\n      </select>\n      <form onSubmit={(e)=> handleSearch(e)}>\n        <input type='text' onChange={(e)=>setSearchTerm(e.target.value)} className='search-bar' placeholder='Search..'></input>\n        <button className='search-btn' type='submit'><i className='fa fa-search'></i></button>\n      </form>\n      <ul className='elective-list'>\n        {renderElectives()}\n      </ul>\n    </div>\n  )\n}\n\nexport default Electives;","/home/parth/Desktop/Projects/Planet/src/components/Sidebar.js",[],"/home/parth/Desktop/Projects/Planet/src/components/Breadths.js",[],"/home/parth/Desktop/Projects/Planet/src/App.js",[],"/home/parth/Desktop/Projects/Planet/src/components/Header.js",["41","42"],"import React, { useEffect } from \"react\";\nimport \"../App.css\"\nimport logo from '../assets/Planet.png'\n\n\nconst Header = () => {\n  return (\n    <div className='navbar header'>\n      <div className='logo'>\n        <img src={logo} width='400'/>\n      </div>\n    </div>\n  )\n}\n\nexport default Header","/home/parth/Desktop/Projects/Planet/src/components/MainGrid.js",[],["43","44"],"/home/parth/Desktop/Projects/Planet/src/components/Main.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":55,"column":29,"nodeType":"51","messageId":"52","endLine":55,"endColumn":31},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":10,"column":9,"nodeType":"59","endLine":10,"endColumn":38},{"ruleId":"45","replacedBy":"60"},{"ruleId":"47","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["62"],["63"],"no-global-assign","no-unsafe-negation"]