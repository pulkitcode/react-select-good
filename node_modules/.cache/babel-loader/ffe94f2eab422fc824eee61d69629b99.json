{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/parth/Desktop/Projects/Planet-FE/src/components/Electives.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Fuse from 'fuse.js';\n\nconst Electives = props => {\n  _s();\n\n  const [electives, setElectives] = useState([]);\n  const [selectedElective, setSelectedElective] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(null);\n  const fuse = new Fuse(selectedElective, {\n    shouldSort: true,\n    includeMatches: true,\n    minMatchCharLength: 2,\n    includeScore: true,\n    // threshold: 0.5,\n    location: 50,\n    keys: ['name']\n  });\n\n  const renderElectiveDepartments = () => {\n    return electives.map(dept => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: dept.department,\n        children: dept.department\n      }, dept._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this);\n    });\n  };\n\n  const handleSearch = e => {\n    e.preventDefault();\n    const results = fuse.search(searchTerm);\n    console.log(searchTerm);\n    setSearchResults(results);\n    console.log(searchResults);\n  };\n\n  const renderElectives = () => {\n    const list = searchResults.slice(0, 5);\n    return list.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => props.addSubject(e.target.innerHTML),\n        value: item.item.name,\n        className: \"elective-item\",\n        children: item.item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this);\n    });\n  };\n\n  const selectElectives = deptName => {\n    electives.map(dept => {\n      if (deptName === dept.department) {\n        setSelectedElective(dept.electives);\n      }\n    });\n  };\n\n  const handleDeptChange = e => {\n    selectElectives(e.target.value);\n    console.log(selectedElective);\n  };\n\n  useEffect(() => {\n    fetch('http://localhost:5001/Electives/').then(res => res.json()).then(res => setElectives(res));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elective-area\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Select Your Electives:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control electivesDropdown\",\n      id: \"electivesSelect\",\n      onChange: e => handleDeptChange(e),\n      children: renderElectiveDepartments()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSearch(e),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearchTerm(e.target.value),\n        className: \"search-bar\",\n        placeholder: \"Search..\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-btn\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"elective-list\",\n      children: renderElectives()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Electives, \"HQqXZKiVFyMLDxLdI5pkQRvZCIE=\");\n\n_c = Electives;\nexport default Electives;\n\nvar _c;\n\n$RefreshReg$(_c, \"Electives\");","map":{"version":3,"sources":["/home/parth/Desktop/Projects/Planet-FE/src/components/Electives.js"],"names":["useEffect","useState","Fuse","Electives","props","electives","setElectives","selectedElective","setSelectedElective","searchResults","setSearchResults","searchTerm","setSearchTerm","fuse","shouldSort","includeMatches","minMatchCharLength","includeScore","location","keys","renderElectiveDepartments","map","dept","department","_id","handleSearch","e","preventDefault","results","search","console","log","renderElectives","list","slice","item","addSubject","target","innerHTML","name","selectElectives","deptName","handleDeptChange","value","fetch","then","res","json"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\nimport Fuse from 'fuse.js';\n\n\nconst Electives = (props) => {\n  const [electives, setElectives] = useState([])\n  const [selectedElective, setSelectedElective] = useState([])\n  const [searchResults, setSearchResults] = useState([])\n  const [searchTerm, setSearchTerm] = useState(null)\n\n  const fuse = new Fuse(selectedElective, {\n    shouldSort: true,\n    includeMatches: true,\n    minMatchCharLength:2,\n    includeScore: true,\n    // threshold: 0.5,\n    location: 50,\n    keys:[\n      'name'\n    ]\n  })\n\n  const renderElectiveDepartments = () => {\n    return(\n      electives.map(\n        (dept) =>{\n          return(\n            <option value={dept.department} key={dept._id}>{dept.department}</option>\n          )\n        }\n      )\n    )\n  }\n\n  const handleSearch = (e) => {\n    e.preventDefault()\n    const results = fuse.search(searchTerm)\n    console.log(searchTerm)\n    setSearchResults(results)\n    console.log(searchResults)\n  }\n\n  const renderElectives = () => {\n    const list = searchResults.slice(0,5)\n    return(\n      list.map( (item) =>{\n        return(\n          <li onClick={(e)=>props.addSubject(e.target.innerHTML)} value={item.item.name} className='elective-item'>{item.item.name}</li>\n        )\n      })\n    )\n  }\n\n  const selectElectives = (deptName) =>{\n    electives.map( ( dept ) => {\n      if(deptName === dept.department){\n        setSelectedElective(dept.electives)\n      }\n    })\n  }\n\n  const handleDeptChange = (e) => {\n    selectElectives(e.target.value)\n    console.log(selectedElective)\n  }\n\n  useEffect(()=>{\n    fetch('http://localhost:5001/Electives/')\n    .then(res => res.json())\n    .then(res => setElectives(res))\n  }, [])\n\n\n  return(\n    <div className='elective-area'>\n      <div className='title'>\n        <h3>Select Your Electives:</h3>\n      </div>\n      <select className='form-control electivesDropdown'\n        id='electivesSelect'\n        onChange={(e)=>handleDeptChange(e)}\n      >\n        {renderElectiveDepartments()}\n      </select>\n      <form onSubmit={(e)=> handleSearch(e)}>\n        <input type='text' onChange={(e)=>setSearchTerm(e.target.value)} className='search-bar' placeholder='Search..'></input>\n        <button className='search-btn' type='submit'><i className='fa fa-search'></i></button>\n      </form>\n      <ul className='elective-list'>\n        {renderElectives()}\n      </ul>\n    </div>\n  )\n}\n\nexport default Electives;"]},"metadata":{},"sourceType":"module"}